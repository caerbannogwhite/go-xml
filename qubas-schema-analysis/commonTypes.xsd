<?xml version="1.0"?>
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
             xmlns:ct="tnsCommonTypes"
             targetNamespace="tnsCommonTypes"
             attributeFormDefault="unqualified"
             elementFormDefault="unqualified">

    <xs:complexType name="signatureType">
      <xs:sequence>
        <xs:element name="authorisedBy" type="xs:string"/>
        <xs:element name="authorisedOn" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="sampleType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="reference"/>
        <xs:enumeration value="test"/>
        <xs:enumeration value="controlWell"/>
        <xs:enumeration value="qualityControl"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="parallelModeType">
      <xs:annotation><xs:appinfo><UI>
        <widget>textbox</widget>
        <defaultValue>pairwise</defaultValue>
        <condition>
          <expression>false</expression>
          <writeDefault/>
        </condition>
      </UI></xs:appinfo></xs:annotation>  
      <xs:restriction base="xs:string">
        <xs:enumeration value="pairwise"/>
        <xs:enumeration value="all"/>
      </xs:restriction>
    </xs:simpleType>






    <xs:simpleType name="varianceEstimateType">
      <xs:annotation><xs:appinfo><UI>
            <widget>dropdown</widget>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-VarianceEstimate")</label>
            <description>@Html.DescriptionString("Description-AnalysisDef-VarianceEstimate")</description>
            <defaultValue>residuals</defaultValue>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:string">
        <xs:enumeration value="residuals">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-residuals")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="lackOfFit">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-lackOfFit")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="pureError">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-pureError")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="lineNamesType">
      <xs:sequence>
        <xs:element name="sampleLine" type="xs:string" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="singularityTypeQuantal">
      <xs:restriction base="xs:string">
        <xs:enumeration value="none"/>
        <xs:enumeration value="extreme"/>
        <xs:enumeration value="singularRising"/>
        <xs:enumeration value="singularFalling"/>
      </xs:restriction>
    </xs:simpleType>



    <!--extra types for suitability criteria -->
    <xs:complexType name="decision">
      <xs:annotation><xs:appinfo><UI>
            <sortid>999</sortid>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="continueAssayOnFailure" type="xs:boolean" minOccurs="0">
          <xs:annotation><xs:appinfo><UI when="SystemSuitability">
                <widget>checkbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ContinueAssayOnFailure")</label>
                <defaultValue asString="false">true</defaultValue>
                <condition>
                  <expression>!$parent.parent().nodes.get("forInformationOnly").value()</expression>
                  <writeDefault/>
                </condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="printRPOnFailure" type="xs:boolean" minOccurs="0">
          <xs:annotation><xs:appinfo><UI when="HasRP">
                <widget>checkbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-PrintRpOnFailure")</label>
                <defaultValue asString="false">true</defaultValue>
                <condition>
                  <expression>!$parent.parent().nodes.get("forInformationOnly").value()</expression>
                  <writeDefault/>
                </condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="pass" type="xs:boolean" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="suitabilityCriteriaDouble">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <sortid>10</sortid>
                <widget>textbox</widget>
                <defaultValue>1</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultDouble">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="xs:double"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="strictlyPositiveDouble">
      <xs:annotation><xs:appinfo><UI>
            <widget>textbox</widget>
            <defaultValue></defaultValue>
            <validation>
              <item>
                <rule>strictlyPositiveDouble</rule>
                <onlyif>$parent.parent().is_used()</onlyif>
              </item>
              <item>
                <rule>required</rule>
                <onlyif>$parent.parent().is_used()</onlyif>
              </item></validation>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:double">
        <xs:minExclusive value="0"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="significanceLevelType">
      <xs:annotation><xs:appinfo><UI>
            <sortid>10</sortid>
            <widget>textbox</widget>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-significancelevel")</label>
            <defaultValue>0.01</defaultValue>
            <validation><item>
              <rule>significanceLevel</rule>
              <onlyif>$parent.is_used()</onlyif>
            </item>
            <item>
              <rule>required</rule>
              <onlyif>$parent.is_used()</onlyif>
            </item></validation>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:double">
        <xs:minInclusive value="0"/>
        <xs:maxInclusive value="0.5"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="suitabilityCriteriaSignificanceLevelType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:significanceLevelType"/>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultSignificanceLevelType">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="ct:significanceLevelType"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="confidenceLevelType">
      <xs:annotation><xs:appinfo><UI>
            <sortid>10</sortid>
            <widget>textbox</widget>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-ConfidenceLevel")</label>
            <defaultValue>0.90</defaultValue>
            <validation><item>
              <rule>confidenceLevel</rule>
              <onlyif>$parent.parent().is_used()</onlyif>
            </item><item>
              <rule>required</rule>
              <onlyif>$parent.parent().is_used()</onlyif>
            </item></validation>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:double">
        <xs:minInclusive value="0.5"/>
        <xs:maxInclusive value="1"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="integerRangeType">
      <xs:annotation><xs:appinfo><UI>
            <sortid>10</sortid>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="lower" type="xs:int">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Lower")</label>
                <defaultValue>0</defaultValue>
                 <validation>
                  <item>
                    <rule>smallerThan</rule>
                    <relation>$parent.nodes.get("upper").value()</relation>
                    <onlyif>$parent.parent().is_used()</onlyif>
                  </item>
                 <item>
                    <rule>integerNumeric</rule>
                    <onlyif>$parent.parent().is_used()</onlyif>
                  </item>
                  <item>
                    <rule>required</rule>
                    <onlyif>$parent.parent().is_used()</onlyif>
                  </item>
                </validation>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="upper" type="xs:int">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Upper")</label>
                <defaultValue>1</defaultValue>
                <validation>
                  <item>
                    <rule>integerNumeric</rule>
                    <onlyif>$parent.parent().is_used()</onlyif>
                  </item>
                  <item>
                    <rule>required</rule>
                    <onlyif>$parent.parent().is_used()</onlyif>
                  </item>
                </validation>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name ="suitabilityCriteriaIntegerRange">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:integerRangeType">
          <xs:annotation><xs:appinfo><UI>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="rangeType">
      <xs:annotation><xs:appinfo><UI>
            <sortid>10</sortid>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="lower" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Lower")</label>
                <defaultValue>0</defaultValue>
                <validation><item>
                  <rule>smallerThan</rule>
                  <relation>$parent.nodes.get("upper").value()</relation>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item>
                <item>
                  <rule>required</rule>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item></validation>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="upper" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Upper")</label>
                <defaultValue>1</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name ="suitabilityCriteriaRange">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:rangeType">
          <xs:annotation><xs:appinfo><UI>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultRangeType">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="ct:rangeType"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>



    <xs:complexType name="rangeConfidenceLevel">
      <xs:sequence>
        <xs:element name="lower" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Lower")</label>
                <defaultValue>0</defaultValue>
                <validation><item>
                  <rule>smallerThan</rule>
                  <relation>$parent.nodes.get("upper").value()</relation>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item><item>
                  <rule>required</rule>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item></validation>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="upper" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Upper")</label>
                <defaultValue>0</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element default="0.95" name="confidenceLevel" type="ct:confidenceLevelType"/>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityCriteriaRangeConfidenceLevel">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:rangeConfidenceLevel">
          <xs:annotation><xs:appinfo><UI>
                <widget>div</widget>
                <sortid>10</sortid>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="suitabilityResultRangeConfidenceLevel">
      <xs:sequence>
        <xs:element name="calculated" type="ct:rangeType"/>
        <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="upperConfidenceLevel">
      <xs:annotation><xs:appinfo><UI>
            <sortid>10</sortid>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="upper" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <widget>textbox</widget>
                <defaultValue>1</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Upper")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element default="0.95" name="confidenceLevel" type="ct:confidenceLevelType"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="suitabilityCriteriaUpperConfidenceLevel">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:upperConfidenceLevel"/>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultUpperConfidenceLevel">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="ct:upperConfidenceLevel"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="parallelismTestType">
      <xs:sequence>
        <xs:element name="type">
          <xs:annotation><xs:appinfo><UI>
                <widget>dropdown</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Type")</label>
                <defaultValue>FTest</defaultValue>
          </UI></xs:appinfo></xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="FTest">
                <xs:annotation><xs:appinfo><UI when="Quantitative">
                      <label>@Html.LanguageString("DisplayName-AnalysisOpt-FTest")</label>
                </UI></xs:appinfo></xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="ChiSquaredTest">
                <xs:annotation><xs:appinfo><UI>
                      <label>@Html.LanguageString("DisplayName-AnalysisOpt-ChiSquaredTest")</label>
                </UI></xs:appinfo></xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element default="0.05" name="significanceLevel" type="ct:significanceLevelType">
          <xs:annotation><xs:appinfo><UI>
                <validation><item>
                  <rule>significanceLevel</rule>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item><item>
                  <rule>required</rule>
                  <onlyif>$parent.parent().is_used()</onlyif>
                </item></validation>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="lessParallelModel" type="xs:unsignedInt" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityCriteriaParallelismTestType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:parallelismTestType">
          <xs:annotation><xs:appinfo><UI>
                <sortid>10</sortid>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultParallelismTestType">
      <xs:sequence>
        <xs:element name="calculated">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pValue" type="xs:double"/>
              <xs:element name="skipped" type="xs:boolean"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="parameters" type="ct:parallelismTestType"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="variabilityQuantalModel">
      <xs:sequence>
        <xs:element name="type" type="xs:string" fixed="LogLikelihood">
          <xs:annotation><xs:appinfo><UI>
                <widget>dropdown</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Type")</label>
                <defaultValue>variance</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="value" type="xs:double">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Variability-quantal")</label>
                <widget>textbox</widget>
                <defaultValue>1</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="suitabilityCriteriaQuantalVariabilityType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:variabilityQuantalModel">
          <xs:annotation><xs:appinfo><UI>
                <sortid>10</sortid>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="variabilityType">
      <xs:sequence>
        <xs:element name="type">
          <xs:annotation><xs:appinfo><UI>
                <widget>dropdown</widget>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-Type")</label>
                <defaultValue>variance</defaultValue>
          </UI></xs:appinfo></xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="variance">
                <xs:annotation><xs:appinfo><UI>
                      <label>@Html.LanguageString("DisplayName-AnalysisOpt-variance")</label>
                </UI></xs:appinfo></xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="RMSE">
                <xs:annotation><xs:appinfo><UI>
                      <label>@Html.LanguageString("DisplayName-AnalysisOpt-RMSE")</label>
                </UI></xs:appinfo></xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element default="1" name="value" type="ct:strictlyPositiveDouble">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-UpperLimitOfVariability")</label>
                <defaultValue>1</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityCriteriaVariabilityType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:variabilityType">
          <xs:annotation><xs:appinfo><UI>
                <sortid>10</sortid>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultVariabilityType">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="ct:variabilityType"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="significanceOfSlopeType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="isPositive" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <widget>dropdown</widget>
                <!--<choices>
                  <choice label='@Html.LanguageString("DisplayName-AnalysisOpt-positive")' value="true"/>
                  <choice label='@Html.LanguageString("DisplayName-AnalysisOpt-negative")' value="false"/>
                </choices>-->
                <label>@Html.LanguageString("DisplayName-AnalysisDef-IsPositive")</label>
                <defaultValue asString="false">true</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element default="0.05" name="value" type="ct:significanceLevelType">
          <xs:annotation><xs:appinfo><UI>
                <condition>
                  <expression>$parent.parent().nodes.get("isUsed").value()</expression>
                  <writeDefault/>
                </condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityCriteriaSignificanceOfSlopeType">
      <xs:annotation><xs:appinfo><UI>
            <widget>div</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:sequence>
        <xs:element name="parameters" type="ct:significanceOfSlopeType">
          <xs:annotation><xs:appinfo><UI>
                <sortid>10</sortid>
                <widget>div</widget>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="decision" type="ct:decision"/>
        <xs:element name="isUsed" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>1</sortid>
                <widget>checkbox</widget>
                <label>Use this test</label>
                <defaultValue asString="false">false</defaultValue>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
        <xs:element name="forInformationOnly" type="xs:boolean">
          <xs:annotation><xs:appinfo><UI>
                <sortid>2</sortid>
                <widget>checkbox</widget>
                <defaultValue asString="false">false</defaultValue>
                <label>@Html.LanguageString("DisplayName-AnalysisDef-ForInformationOnly")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="suitabilityResultSignificanceOfSlopeType">
      <xs:sequence>
        <xs:element name="calculated" type="xs:double"/>
        <xs:element name="parameters" type="ct:significanceOfSlopeType"/>
        <xs:element name="pass" type="xs:boolean"/>
        <xs:element name="forInformationOnly" type="xs:boolean"/>
        <xs:element name="decision" type="ct:decision"/>
      </xs:sequence>
    </xs:complexType>
    <!-- end of extra types for suitability criteria -->

    <xs:complexType name="variabilityRobustRegression">
      <xs:sequence>
        <xs:element name="type" type="xs:string" fixed="scaleEstimate"/>
        <xs:element name="value" type="xs:double"/>
      </xs:sequence>
    </xs:complexType>

    <!-- end of extra types for suitability criteria -->
    <!-- extra types for analysisDefinition -->

    <xs:simpleType name="outlierIdentificationAlgorithmType">
      <xs:annotation><xs:appinfo><UI>
            <widget>dropdown</widget>
            <defaultValue>GrubbsTest</defaultValue>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-OutlierIdentificationAlgorithm")</label>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:string">
        <xs:enumeration value="GrubbsTest">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-GrubbsTest")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="StudentisedResiduals">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-StudentisedResiduals")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="methodForRatiosType">
      <xs:annotation><xs:appinfo><UI>
            <widget>dropdown</widget>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-MethodForRatios")</label>
            <description>@Html.DescriptionString("Description-AnalysisDef-MethodForRatios")</description>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:string">
        <xs:enumeration value="deltaMethod">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-deltaMethod")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="FiellersTheorem">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-FiellersTheorem")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="statisticalModel">
      <xs:restriction base="xs:string">
        <xs:enumeration value="linearModel">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-LinearModel")</label>
                <condition><expression>ko.utils.isValidMethodType("Quantitative")</expression></condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="fourPL">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-fourPlModel")</label>
                <condition><expression>ko.utils.isValidMethodType("Quantitative")</expression></condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="fivePL">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-fivePlModel")</label>
                <condition><expression>ko.utils.isValidMethodType("Quantitative")</expression></condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="logitModel">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-logitModel")</label>
                <condition><expression>ko.utils.isValidMethodType("Quantal")</expression></condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="probitModel">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-probitModel")</label>
                <condition><expression>ko.utils.isValidMethodType("Quantal")</expression></condition>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="robustRegression"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="quantalModelType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="probitModel"/>
        <xs:enumeration value="logitModel"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="transformationResponse">
      <xs:annotation><xs:appinfo><UI>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-TransformResponse")</label>
            <description>@Html.DescriptionString("Description-AnalysisDef-transformResponse")</description>
            <widget>dropdown</widget>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:string">
        <xs:enumeration value="none">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-None")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log2">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Log2")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Loge")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log10">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Log10")</label>
              </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="sqrt">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-SquareRoot")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="square">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Square")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="linear">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-TransformResponseLinear")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="transformationDose">
      <xs:annotation><xs:appinfo><UI>
            <label>@Html.LanguageString("DisplayName-AnalysisDef-TransformDose")</label>
            <description>@Html.DescriptionString("Description-AnalysisDef-TransformDose")</description>
            <widget>dropdown</widget>
            <defaultValue>log10</defaultValue>
      </UI></xs:appinfo></xs:annotation>
      <xs:restriction base="xs:string">
        <xs:enumeration value="none">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-None")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log2">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Log2")</label>
          </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Loge")</label>
              </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="log10">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-Log10")</label>
              </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="linear">
          <xs:annotation><xs:appinfo><UI>
                <label>@Html.LanguageString("DisplayName-AnalysisOpt-TransformDoseLinear")</label>
              </UI></xs:appinfo></xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="valueNamed">
      <xs:sequence>
        <xs:element name="sampleLine" type="xs:string"/>
        <xs:element name="value" type="xs:double"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name ="preDilutedDosesType">
      <xs:sequence>
      <xs:element name ="sample" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="dataPoint" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="id" type="xs:string"/>
                  <xs:element name="dose" type="xs:double"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        <xs:attribute name="sampleLine" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
      </xs:sequence>
    </xs:complexType>
    
    <xs:simpleType name="outcomeStatus">
      <xs:restriction base="xs:string">
        <xs:enumeration value="success"/>
        <xs:enumeration value="failure"/>
      </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="outcomeDescription">
      <xs:restriction base="xs:string">
        <xs:enumeration value="None"/>
        <!-- pre processing -->
        <xs:enumeration value="SomeEmptySamples"/> <!-- Some samples are empty after NaN, user-excluded and non-finite doses and responses have been removed. -->
        <xs:enumeration value="TwoLogTransforms"/> <!-- The dose should be log-transformed exactly once. -->
        <xs:enumeration value="UndefinedValuesAfterTransformation"/> <!-- Some samples contain undefined or non-finite values after transformation. -->
        <xs:enumeration value="MultipleReferences"/> <!-- There must be exactly one reference standard. -->
        <xs:enumeration value="UndefinedWeights"/> <!-- Some weights are undefined or infinite. -->
        <xs:enumeration value="NonIntegerValues"/> <!-- Responses and maximum responses must be whole numbers. -->
        <xs:enumeration value="OutOfRangeResponses"/> <!-- Responses must be between 0 and maximum responses. -->
        <!-- Misc -->
        <xs:enumeration value="FailedOutlierIdentification" /> <!-- Outlier detection has failed. -->
        <xs:enumeration value="FailedLinearPartIdentification"/> <!-- Linear part identification has failed. -->
        <!-- fit -->
        <xs:enumeration value="InsufficientData" /> <!-- Not enough data for the requested fit. -->
        <xs:enumeration value="SingularFit"/> <!-- The requested fit is singular. -->
        <xs:enumeration value="UndefinedVariance"/> <!-- The variance is not defined. -->
        <xs:enumeration value="InsufficentDosesForFivePL"/> <!-- At least 6 dose groups are necessary for fitting a 5PL model when the sign of B is unrestricted. -->
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="outcomeType">
      <xs:sequence>
        <xs:element name="status" type="ct:outcomeStatus"/>
        <xs:element name="description" type="ct:outcomeDescription"/>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="outliersType">
      <xs:sequence>
        <xs:element name="id" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
      </xs:sequence>
    </xs:complexType>
    <!-- end of extra types for analysisDefinition -->
    <!-- extra type for fitted parameters -->
    <xs:complexType name="hessianMatrixType">
      <xs:sequence>
        <xs:element name="row" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="value" type="xs:double" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="parameter" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name="transformedRelativePotencyType">
        <xs:sequence>
          <xs:element name="value" type="xs:double"/>
          <xs:element name="lowerCI" type="xs:double"/>
          <xs:element name="upperCI" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
     <xs:complexType name="rawRelativePotencyType">
        <xs:sequence>
          <xs:element name="value" type="xs:double"/>
          <xs:element name="lowerCI" type="xs:double"/>
          <xs:element name="upperCI" type="xs:double"/>
          <xs:element name="foldPrecision" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
    <!-- end of extra type for fitted parameters -->
    <!-- extra types for data summaries-->
    <xs:complexType name="continuousDataSummaryType">
      <xs:sequence>
        <xs:element name="geometric" type="xs:boolean"/>
        <xs:element name="entry" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dose" type="xs:double"/>
              <xs:element name="mean" type="xs:double"/>
              <xs:element name="standardDeviation" type="xs:double"/>
              <xs:element name="coefficientOfVariation" type="xs:double"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="quantalDataSummaryType">
      <xs:sequence>
        <xs:element name="entry" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dose" type="xs:double"/>
              <xs:element name="total" type="xs:unsignedInt"/>
              <xs:element name="numberOfResponses" type="xs:unsignedInt"/>
              <xs:element name="proportionOfResponses" type="xs:double"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    <!-- end of extra types for data summaries-->
    <!-- extra types for graphical data -->
    <xs:complexType name="datapointType">
      <xs:sequence>
        <xs:element name="dose" type="xs:double"/>
        <xs:element name="response" type="xs:double"/>
        <xs:element name="sampleLine" type="xs:string"/>
        <xs:element name="isOutlier" type="xs:boolean"/>
        <xs:element name="removedByLinearPartId" type="xs:boolean"/>
        <xs:element name="id" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
    <xs:complexType name="graphicalDataType">
        <xs:sequence>
          <xs:element name="datapoint" type="ct:datapointType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--end extra types for graphical data -->

  </xs:schema>
