<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
            xmlns:ct="tnsCommonTypes"
            xmlns:linearModel="tnsLinearModel"
            targetNamespace="tnsLinearModel"
            elementFormDefault="unqualified">
    <xs:import namespace="tnsCommonTypes" schemaLocation="commonTypes.xsd"/>

  <xs:complexType name="controlWellCriteria">
    <xs:sequence>
      <xs:element name="meanOfGroup" type="ct:suitabilityCriteriaRange">
        <xs:annotation><xs:appinfo><UI>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-MeanOfGroup")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-MeanOfGroup")</description>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="geometricMean" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
        <xs:annotation><xs:appinfo><UI>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-GeometricMean")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-GeometricMean")</description>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="controlWellSampleCriteria">
    <xs:complexContent>
      <xs:extension base="linearModel:controlWellCriteria">
        <xs:attribute name="sampleLine" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="suitabilityCriteriaLinear">
    <xs:sequence>
      <xs:element name="systemSuitability">
        <xs:annotation><xs:appinfo><UI>
                <widget>div</widget>
                <state>SystemSuitability</state>
        </UI></xs:appinfo></xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="controlWells">
              <xs:annotation><xs:appinfo><UI>
                      <widget>tabgroup</widget>
                      <heading>Control Wells</heading>
              </UI></xs:appinfo></xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="common" type="linearModel:controlWellCriteria">
                    <xs:annotation><xs:appinfo><UI>
                          <widget>tabgroup</widget>
                          <label>Default tests</label>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="sample" minOccurs="0" maxOccurs="unbounded" type="linearModel:controlWellSampleCriteria">
                    <xs:annotation><xs:appinfo><UI>
                          <widget>tabgroup</widget>
                          <label>Sample specific tests</label>
                          <idattr>sampleLine</idattr>
                          <idsfrom>CWSampleNames</idsfrom>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="reference">
              <xs:annotation><xs:appinfo><UI>
                <widget>tabgroup</widget>
                <heading>Reference</heading>
                <virtual>
                  <item name="gof"><widget>tabgroup</widget><label>Goodness of fit</label></item>
                  <item name="ran"><widget>tabgroup</widget><label>Allowed ranges for parameters</label></item>
                  <item name="eq"><widget>tabgroup</widget><label>Equivalence tests for parameters</label></item>
                </virtual>
              </UI></xs:appinfo></xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="goodnessOfFit" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceLevelType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-GoodnessOfFit")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-GoodnessOfFit")</description>
                          <parent>gof</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rSquared" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaDouble">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RSquared")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RSquared")</description>
                          <parent>gof</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="significanceOfSlope" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceOfSlopeType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-SignificanceOfSlope")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-SignificanceOfSlope")</description>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rangeIntercept" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeIntercept")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RangeIntercept")</description>
                          <parent>ran</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rangeSlope" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeSlope")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RangeSlope")</description>
                          <parent>ran</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="equivalenceIntercept" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-EquivalenceIntercept")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-EquivalenceIntercept")</description>
                          <parent>eq</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="equivalenceSlope" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-EquivalenceSlope")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-EquivalenceSlope")</description>
                          <parent>eq</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="variability" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaVariabilityType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-Variability")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-Variability")</description>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="qualityControl">
              <xs:annotation><xs:appinfo><UI>
                <widget>tabgroup</widget>
                <heading>Quality Control</heading>
                <state>HasRP</state>
              </UI></xs:appinfo></xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="unconstrained">
                    <xs:annotation><xs:appinfo><UI>
                      <widget>tabgroup</widget>
                      <label>Tests based on unconstrained fits</label>
                      <virtual>
                        <item name="gof"><widget>tabgroup</widget><label>Goodness of fit</label></item>
                        <item name="ran"><widget>tabgroup</widget><label>Parallelism: Allowed ranges for parameters</label></item>
                        <item name="eq"><widget>tabgroup</widget><label>Parallelism: Equivalence tests for parameters</label></item>
                      </virtual>
                    </UI></xs:appinfo></xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="goodnessOfFit" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceLevelType">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-GoodnessOfFit")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-GoodnessOfFit")</description>
                                <parent>gof</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="rSquared" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaDouble">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-RSquared")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-RSquared")</description>
                                <parent>gof</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="significanceOfSlope" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceOfSlopeType">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-SignificanceOfSlope")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-SignificanceOfSlope")</description>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="rangeSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeSlopeDifference")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-RangeSlopeDifference")</description>
                                <parent>ran</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="rangeSlopeRatio" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeSlopeRatio")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-RangeSlopeRatio")</description>
                                <parent>ran</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="rangeNormalisedSlopeDifference" minOccurs="1" maxOccurs="1"  type="ct:suitabilityCriteriaRange">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-rangeNormalisedSlopeDifference")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-rangeNormalisedSlopeDifference")</description>
                                <parent>ran</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="equivalenceSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceSlopeDifference")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceSlopeDifference")</description>
                                <parent>eq</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="equivalenceSlopeRatio" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceSlopeRatio")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceSlopeRatio")</description>
                                <parent>eq</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="equivalenceNormalisedSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                          <xs:annotation><xs:appinfo><UI>
                                <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceNormalisedSlopeDifference")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceNormalisedSlopeDifference")</description>
                                <parent>eq</parent>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="pairwise">
                    <xs:annotation><xs:appinfo><UI>
                      <widget>tabgroup</widget>
                      <label>Tests based on parallel fits</label>
                    </UI></xs:appinfo></xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="rangeRelativePotency" type="ct:suitabilityCriteriaRange">
                          <xs:annotation><xs:appinfo><UI>
                                <sortid>2</sortid>
                                <label>@Html.LanguageString("DisplayName-analysisdef-rangeRelativePotency")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-rangeRelativePotency")</description>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="equivalenceRelativePotency" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                          <xs:annotation><xs:appinfo><UI>
                                <sortid>3</sortid>
                                <label>@Html.LanguageString("DisplayName-analysisdef-equivalenceRelativePotency")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceRelativePotency")</description>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="parallelism" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaParallelismTestType">
                          <xs:annotation><xs:appinfo><UI>
                                <sortid>1</sortid>
                                <label>@Html.LanguageString("DisplayName-analysisdef-parallelism")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-parallelism")</description>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                        <xs:element name="foldPrecision" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaUpperConfidenceLevel">
                          <xs:annotation><xs:appinfo><UI>
                                <sortid>4</sortid>
                                <label>@Html.LanguageString("DisplayName-analysisdef-foldPrecision")</label>
                                <description>@Html.DescriptionString("Description-AnalysisDef-foldPrecision")</description>
                          </UI></xs:appinfo></xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sampleSuitability">
        <xs:annotation><xs:appinfo><UI>
              <widget>tabgroup</widget>
              <heading>Sample Suitability</heading>
              <state>HasRP</state>
        </UI></xs:appinfo></xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="unconstrained">
              <xs:annotation><xs:appinfo><UI>
                      <widget>tabgroup</widget>
                      <label>Tests based on unconstrained fits</label>
                      <virtual>
                        <item name="gof"><widget>tabgroup</widget><label>Goodness of fit</label></item>
                        <item name="ran"><widget>tabgroup</widget><label>Parallelism: Allowed ranges for parameters</label></item>
                        <item name="eq"><widget>tabgroup</widget><label>Parallelism: Equivalence tests for parameters</label></item>
                      </virtual>
              </UI></xs:appinfo></xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="goodnessOfFit" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceLevelType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-GoodnessOfFit")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-GoodnessOfFit")</description>
                          <parent>gof</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rSquared" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaDouble">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RSquared")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RSquared")</description>
                          <parent>gof</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="significanceOfSlope" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaSignificanceOfSlopeType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-SignificanceOfSlope")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-SignificanceOfSlope")</description>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rangeSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeSlopeDifference")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RangeSlopeDifferenceSample")</description>
                          <parent>ran</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rangeSlopeRatio" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRange">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-RangeSlopeRatio")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-RangeSlopeRatioSample")</description>
                          <parent>ran</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="rangeNormalisedSlopeDifference" minOccurs="1" maxOccurs="1"  type="ct:suitabilityCriteriaRange">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-rangeNormalisedSlopeDifference")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-rangeNormalisedSlopeDifferenceSample")</description>
                          <parent>ran</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="equivalenceSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceSlopeDifference")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceSlopeDifferenceSample")</description>
                          <parent>eq</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="equivalenceSlopeRatio" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceSlopeRatio")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceSlopeRatioSample")</description>
                          <parent>eq</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="equivalenceNormalisedSlopeDifference" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaRangeConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisDef-equivalenceNormalisedSlopeDifference")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-equivalenceNormalisedSlopeDifferenceSample")</description>
                          <parent>eq</parent>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="pairwise">
              <xs:annotation><xs:appinfo><UI>
                      <widget>tabgroup</widget>
                      <label>Tests based on parallel fits</label>
                    </UI></xs:appinfo></xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="parallelism" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaParallelismTestType">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-analysisdef-parallelism")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-Parallelism")</description>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                  <xs:element name="foldPrecision" minOccurs="1" maxOccurs="1" type="ct:suitabilityCriteriaUpperConfidenceLevel">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-analysisdef-foldPrecision")</label>
                          <description>@Html.DescriptionString("Description-AnalysisDef-foldPrecision")</description>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="analysisOptionsLinear">
    <xs:sequence>
      <xs:element name="transformDose" type="ct:transformationDose">
        <xs:annotation><xs:appinfo><UI>
              <validation><item>
                <rule>twoLogTransform</rule>
                <relation>$parent.parent().parent().nodes.get("priorDoseTransformation").value()</relation>
              </item></validation>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="transformDoseLinearIntercept" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <widget>textbox</widget>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-LinearIntercept")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-transformDose")</description>
              <defaultValue>0</defaultValue>
              <condition>
                <expression>$parent.nodes.get("transformDose").value()=="linear"</expression>
                <writeDefault/>
              </condition>
              <validation><item>
                <rule>finite</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="transformDoseLinearSlope" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <widget>textbox</widget>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-LinearSlope")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-transformDose")</description>
              <defaultValue>1</defaultValue>
              <condition>
                <expression>$parent.nodes.get("transformDose").value()=="linear"</expression>
                <writeDefault/>
              </condition>
              <validation><item>
                <rule>finite</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="transformResponse" type="ct:transformationResponse"/>
      <xs:element name="transformResponseLinearIntercept" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <widget>textbox</widget>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-LinearIntercept")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-transformResponse")</description>
              <defaultValue>0</defaultValue>
              <condition>
                <expression>$parent.nodes.get("transformResponse").value()=="linear"</expression>
                <writeDefault/>
              </condition>
              <validation><item>
                <rule>finite</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="transformResponseLinearSlope" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <widget>textbox</widget>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-LinearSlope")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-transformResponse")</description>
              <defaultValue>1</defaultValue>
              <condition>
                <expression>$parent.nodes.get("transformResponse").value()=="linear"</expression>
                <writeDefault/>
              </condition>
              <validation><item>
                <rule>finite</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="outlierIdentification" type="xs:boolean">
        <xs:annotation><xs:appinfo><UI>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-OutlierIdentification")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-OutlierIdentification")</description>
              <widget>checkbox</widget>
              <defaultValue asString="false">false</defaultValue>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="autoOutlierRemoval" type="xs:boolean">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-AutoOutlierRemoval")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-OutlierIdentification")</description>
              <widget>checkbox</widget>
              <defaultValue asString="false">false</defaultValue>
              <condition>
                <expression>$parent.nodes.get("outlierIdentification").value()</expression>
                <writeDefault/>
              </condition>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="outlierIdentificationAlgorithm" type="ct:outlierIdentificationAlgorithmType">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <description>@Html.DescriptionString("Description-AnalysisDef-OutlierIdentification")</description>
              <condition>
                <expression>$parent.nodes.get("outlierIdentification").value()</expression>
                <writeDefault/>
              </condition>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="parallelMode" type="ct:parallelModeType"/>
      <xs:element name="isWeighted" type="xs:boolean">
        <xs:annotation><xs:appinfo><UI>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-UseWeighted")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-UseWeighted")</description>
              <widget>checkbox</widget>
              <defaultValue asString="false">false</defaultValue>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="weightA" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-WeightA")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-UseWeighted")</description>
              <widget>textbox</widget>
              <defaultValue>1</defaultValue>
              <validation><item>
                <rule>strictlyPositiveDouble</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
              <condition>
                <expression>$parent.nodes.get("isWeighted").value()</expression>
                <writeDefault/>
              </condition>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="weightB" type="xs:double">
        <xs:annotation><xs:appinfo><UI>
              <indent>true</indent>
              <label>@Html.LanguageString("DisplayName-AnalysisDef-WeightB")</label>
              <description>@Html.DescriptionString("Description-AnalysisDef-UseWeighted")</description>
              <widget>textbox</widget>
              <defaultValue>1</defaultValue>
              <validation><item>
                <rule>strictlyPositiveDouble</rule>
              </item><item>
                <rule>required</rule>
              </item></validation>
              <condition>
                <expression>$parent.nodes.get("isWeighted").value()</expression>
                <writeDefault/>
              </condition>
        </UI></xs:appinfo></xs:annotation>
      </xs:element>
      <xs:element name="varianceEstimate" type="ct:varianceEstimateType"/>
      <xs:element name="linearPartIdentification">
        <xs:annotation><xs:appinfo><UI>
              <widget>div</widget>
        </UI></xs:appinfo></xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="isUsed" type="xs:boolean">
              <xs:annotation><xs:appinfo><UI>
                    <widget>checkbox</widget>
                    <defaultValue asString="false">false</defaultValue>
                    <label>@Html.LanguageString("DisplayName-AnalysisDef-LinearPartIdentification")</label>
                    <description>@Html.DescriptionString("Description-AnalysisDef-linearPartIdentification")</description>
              </UI></xs:appinfo></xs:annotation>
            </xs:element>
            <xs:element name="removeEnd">
              <xs:annotation><xs:appinfo><UI>
                    <indent>true</indent>
                    <widget>dropdown</widget>
                    <label>@Html.LanguageString("DisplayName-AnalysisDef-RemoveEnd")</label>
                    <description>@Html.DescriptionString("Description-AnalysisDef-linearPartIdentification")</description>
                    <defaultValue>lowDoseEnd</defaultValue>
                    <condition><expression>$parent.nodes.get("isUsed").value()</expression><writeDefault/></condition>
              </UI></xs:appinfo></xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="lowDoseEnd">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisOpt-LowDoseEnd")</label>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="highDoseEnd">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisOpt-HighDoseEnd")</label>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="lowDoseEndAndHighDoseEnd">
                    <xs:annotation><xs:appinfo><UI>
                          <label>@Html.LanguageString("DisplayName-AnalysisOpt-LowDoseEndAndHighDoseEnd")</label>
                    </UI></xs:appinfo></xs:annotation>
                  </xs:enumeration>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="pLimit" type="xs:double">
              <xs:annotation><xs:appinfo><UI>
                    <indent>true</indent>
                    <widget>textbox</widget>
                    <label>@Html.LanguageString("DisplayName-AnalysisDef-P_Limit")</label>
                    <description>@Html.DescriptionString("Description-AnalysisDef-linearPartIdentification")</description>
                    <defaultValue>0.1</defaultValue>
                    <validation>
                      <item><rule>finite</rule></item>
                      <item><rule>required</rule></item></validation>
                    <condition><expression>$parent.nodes.get("isUsed").value()</expression><writeDefault/></condition>
              </UI></xs:appinfo></xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="methodForRatios" type="ct:methodForRatiosType" />
      <xs:element name="fixedParameters">
        <xs:annotation><xs:appinfo><UI>
          <widget>div</widget>
        </UI></xs:appinfo></xs:annotation>  
        <xs:complexType>
          <xs:sequence>
            <xs:element name="fixedInterceptNonParallel" type="ct:valueNamed" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="fixedSlopeNonParallel" type="ct:valueNamed" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="fixedInterceptParallel" type="ct:valueNamed" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="fixedSlopeParallel" type="xs:double" minOccurs="0" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="resultsLinear">
    <xs:sequence>
      <xs:element name="preDilutedDoses" type="ct:preDilutedDosesType"/>
      <xs:element name="preProcessing" type="ct:outliersType"/>
      <xs:element name="systemSuitability" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="controlWells" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="dataSummary" type="ct:continuousDataSummaryType" minOccurs="0"/>
                  <xs:element name="suitabilityTests">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="meanOfGroup" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:rangeType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="geometricMean" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:rangeType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>

                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="decisionsReached" type="ct:decision" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="sampleLine" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="reference">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="outliers" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="linearPartID" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="dataSummary" type="ct:continuousDataSummaryType" minOccurs="0"/>
                  <xs:element name="fittedParameters" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="sampleLine" type="xs:string"/>
                        <xs:element name="intercept" type="xs:double"/>
                        <xs:element name="interceptLowerCI" type="xs:double"/>
                        <xs:element name="interceptUpperCI" type="xs:double"/>
                        <xs:element name="slope" type="xs:double"/>
                        <xs:element name="slopeLowerCI" type="xs:double"/>
                        <xs:element name="slopeUpperCI" type="xs:double"/>
                        <xs:element name="variance" type="xs:double"/>
                        <xs:element name="FStatistic" type="xs:double"/>
                        <xs:element name="tStatistic" type="xs:double"/>
                        <xs:element name="lackOfFitProbability" type="xs:double"/>
                        <xs:element name="goodnessOfFitType">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:enumeration value="variance"/>
                              <xs:enumeration value="quadratic"/>
                              <xs:enumeration value="none"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:element>
                        <xs:element name="weightedSumSquaredResiduals" type="xs:double"/>
                        <xs:element name="hessian" type="ct:hessianMatrixType"/>
                        <xs:element name="linearSubset" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="lowerDose" type="xs:double"/>
                              <xs:element name="upperDose" type="xs:double"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="suitabilityTests" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="goodnessOfFit" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="value" type="xs:double"/>
                                    <xs:element name="type">
                                      <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                          <xs:enumeration value="variance"/>
                                          <xs:enumeration value="quadratic"/>
                                          <xs:enumeration value="none"/>
                                        </xs:restriction>
                                      </xs:simpleType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="parameters" type="xs:double"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="rSquared" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="xs:double"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="significanceOfSlope" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:significanceOfSlopeType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="rangeIntercept" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:rangeType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="rangeSlope" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:rangeType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="equivalenceIntercept" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="ct:rangeType"/>
                              <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="equivalenceSlope" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="ct:rangeType"/>
                              <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="variability" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="calculated" type="xs:double"/>
                              <xs:element name="parameters" type="ct:variabilityType"/>
                              <xs:element name="pass" type="xs:boolean"/>
                              <xs:element name="forInformationOnly" type="xs:boolean"/>
                              <xs:element name="decision" type="ct:decision"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="decisionsReached" type="ct:decision" minOccurs="1"/>
                  <xs:element name="graphicalData" type="ct:graphicalDataType" />
                  <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="sampleLine" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="qualityControlSample" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="outliers" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="linearPartID" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="dataSummary" type="ct:continuousDataSummaryType" minOccurs="0"/>
                  <xs:element name="unconstrained" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="fittedParameters" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="sampleLine" type="xs:string"/>
                              <xs:element name="intercept" type="xs:double"/>
                              <xs:element name="interceptLowerCI" type="xs:double"/>
                              <xs:element name="interceptUpperCI" type="xs:double"/>
                              <xs:element name="slope" type="xs:double"/>
                              <xs:element name="slopeLowerCI" type="xs:double"/>
                              <xs:element name="slopeUpperCI" type="xs:double"/>
                              <xs:element name="variance" type="xs:double"/>
                              <xs:element name="FStatistic" type="xs:double"/>
                              <xs:element name="tStatistic" type="xs:double"/>
                              <xs:element name="lackOfFitProbability" type="xs:double"/>
                              <xs:element name="goodnessOfFitType">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="variance"/>
                                    <xs:enumeration value="quadratic"/>
                                    <xs:enumeration value="none"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:element>
                              <xs:element name="weightedSumSquaredResiduals" type="xs:double"/>
                              <xs:element name="hessian" type="ct:hessianMatrixType"/>
                              <xs:element name="linearSubset" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="lowerDose" type="xs:double"/>
                                    <xs:element name="upperDose" type="xs:double"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="suitabilityTests" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="goodnessOfFit" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="value" type="xs:double"/>
                                          <xs:element name="type">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:enumeration value="variance"/>
                                                <xs:enumeration value="quadratic"/>
                                                <xs:enumeration value="none"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="parameters" type="xs:double"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rSquared" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="xs:double"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="significanceOfSlope" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:significanceOfSlopeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeSlopeRatio" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeNormalisedSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceSlopeRatio" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceNormalisedSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="graphicalData" type="ct:graphicalDataType" />
                        <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="pairwise" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="fittedParameters" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="reference">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="sampleLine" type="xs:string"/>
                                    <xs:element name="intercept" type="xs:double"/>
                                    <xs:element name="interceptLowerCI" type="xs:double"/>
                                    <xs:element name="interceptUpperCI" type="xs:double"/>
                                    <xs:element name="slope" type="xs:double"/>
                                    <xs:element name="slopeLowerCI" type="xs:double"/>
                                    <xs:element name="slopeUpperCI" type="xs:double"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="qualityControlSample">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="sampleLine" type="xs:string"/>
                                    <xs:element name="intercept" type="xs:double"/>
                                    <xs:element name="interceptLowerCI" type="xs:double"/>
                                    <xs:element name="interceptUpperCI" type="xs:double"/>
                                    <xs:element name="slope" type="xs:double"/>
                                    <xs:element name="slopeLowerCI" type="xs:double"/>
                                    <xs:element name="slopeUpperCI" type="xs:double"/>
                                    <xs:element name="transformedRelativePotency" type="ct:transformedRelativePotencyType" minOccurs="0"/>
                                    <xs:element name="rawRelativePotency" type="ct:rawRelativePotencyType" minOccurs="0"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="hessian" type="ct:hessianMatrixType"/>
                              <xs:element name="variance" type="xs:double"/>
                              <xs:element name="weightedSumSquaredResiduals" type="xs:double"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="suitabilityTests" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="rangeRelativePotency" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double" />
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceRelativePotency" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="parallelism" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="pValue" type="xs:double"/>
                                          <xs:element name="skipped" type="xs:boolean"/>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="parameters" type="ct:parallelismTestType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="foldPrecision" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:upperConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="graphicalData" type="ct:graphicalDataType" />
                        <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="decisionsReached" type="ct:decision" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="sampleLine" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="decisionsReached" type="ct:decision" minOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sampleSuitability" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="testSample" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="outliers" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="linearPartID" minOccurs="0" type="ct:outliersType"/>
                  <xs:element name="dataSummary" type="ct:continuousDataSummaryType" minOccurs="0"/>
                  <xs:element name="unconstrained" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="fittedParameters" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="sampleLine" type="xs:string"/>
                              <xs:element name="intercept" type="xs:double"/>
                              <xs:element name="interceptLowerCI" type="xs:double"/>
                              <xs:element name="interceptUpperCI" type="xs:double"/>
                              <xs:element name="slope" type="xs:double"/>
                              <xs:element name="slopeLowerCI" type="xs:double"/>
                              <xs:element name="slopeUpperCI" type="xs:double"/>
                              <xs:element name="variance" type="xs:double"/>
                              <xs:element name="FStatistic" type="xs:double"/>
                              <xs:element name="tStatistic" type="xs:double"/>
                              <xs:element name="lackOfFitProbability" type="xs:double"/>
                              <xs:element name="goodnessOfFitType">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="variance"/>
                                    <xs:enumeration value="quadratic"/>
                                    <xs:enumeration value="none"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:element>
                              <xs:element name="weightedSumSquaredResiduals" type="xs:double"/>
                              <xs:element name="hessian" type="ct:hessianMatrixType"/>
                              <xs:element name="linearSubset" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="lowerDose" type="xs:double"/>
                                    <xs:element name="upperDose" type="xs:double"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="suitabilityTests" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="goodnessOfFit" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="value" type="xs:double"/>
                                          <xs:element name="type">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:enumeration value="variance"/>
                                                <xs:enumeration value="quadratic"/>
                                                <xs:enumeration value="none"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="parameters" type="xs:double"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rSquared" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="xs:double"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="significanceOfSlope" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:significanceOfSlopeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeSlopeRatio" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="rangeNormalisedSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:rangeType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceSlopeRatio" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="equivalenceNormalisedSlopeDifference" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="ct:rangeType"/>
                                    <xs:element name="parameters" type="ct:rangeConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="graphicalData" type="ct:graphicalDataType" />
                        <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="pairwise" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="fittedParameters" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="reference">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="sampleLine" type="xs:string"/>
                                    <xs:element name="intercept" type="xs:double"/>
                                    <xs:element name="interceptLowerCI" type="xs:double"/>
                                    <xs:element name="interceptUpperCI" type="xs:double"/>
                                    <xs:element name="slope" type="xs:double"/>
                                    <xs:element name="slopeLowerCI" type="xs:double"/>
                                    <xs:element name="slopeUpperCI" type="xs:double"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="testSample">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="sampleLine" type="xs:string"/>
                                    <xs:element name="intercept" type="xs:double"/>
                                    <xs:element name="interceptLowerCI" type="xs:double"/>
                                    <xs:element name="interceptUpperCI" type="xs:double"/>
                                    <xs:element name="slope" type="xs:double"/>
                                    <xs:element name="slopeLowerCI" type="xs:double"/>
                                    <xs:element name="slopeUpperCI" type="xs:double"/>
                                    <xs:element name="transformedRelativePotency" type="ct:transformedRelativePotencyType" minOccurs="0"/>
                                    <xs:element name="rawRelativePotency" type="ct:rawRelativePotencyType" minOccurs="0"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="hessian" type="ct:hessianMatrixType"/>
                              <xs:element name="variance" type="xs:double"/>
                              <xs:element name="weightedSumSquaredResiduals" type="xs:double"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="suitabilityTests" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="parallelism" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="pValue" type="xs:double"/>
                                          <xs:element name="skipped" type="xs:boolean"/>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="parameters" type="ct:parallelismTestType"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="foldPrecision" minOccurs="0" maxOccurs="1">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="calculated" type="xs:double"/>
                                    <xs:element name="parameters" type="ct:upperConfidenceLevel"/>
                                    <xs:element name="pass" type="xs:boolean"/>
                                    <xs:element name="forInformationOnly" type="xs:boolean"/>
                                    <xs:element name="decision" type="ct:decision"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="graphicalData" type="ct:graphicalDataType" />
                        <xs:element name="outcome" type="ct:outcomeType" minOccurs="1"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="decisionsReached" type="ct:decision" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="sampleLine" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
